# Create a variable `my_name` that contains your name
my_name <- "Vincent Doan"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
print(name_length)
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` function)
now_doing <- paste(my_name, "is programming!")
# Make the `now_doing` variable upper case
toupper(now_doing)
# Make the `now_doing` variable upper case
now_doing <- toupper(now_doing)
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
clear
# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
intro <- substr(lyric, 1, 13)
# Use the `substr()` function to extract the 15th through the last letter of the
# `lyric`, and store the result in a variable called `fruits`
# Hint: use `nchar()` to determine how many total letters there are!
nchar(lyric)
substr(lyric, 15, 32)
fruits<-substr(lyric, 15, 32)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
?gsub
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
?asub
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
?gsub
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
gsub("a", "ee", fruits)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits <- gsub("a", "ee", fruits)
fruits<-substr(lyric, 15, 32)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
fruits_e <- gsub("a", "ee", fruits)
fruits_o <- gsub("a", "o", fruits)
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- paste(intro, fruits_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
paste(intro, fruits_o)
post_add <- x + 3
# Define a function `add_three` that takes a single argument and
# returns a value 3 greater than the input
add_three <- function(x) {
post_add <- x + 3
post_add
}
add_three(1)
ten <- add_three(7)
meters <- feet * 0.3048 + inches * 0.0254
meters
imperial_to_metric <- function(feet, inches) {
meters <- feet * 0.3048 + inches * 0.0254
meters
}
imperial_to_metric(5, 11)
height_in_meters <- imperial_to_metric(5,9)
# Define a function `is_twice_as_long` that takes in two character strings, and
# returns whether or not (e.g., a boolean) the length of one argument is greater
# than or equal to twice the length of the other.
# Hint: compare the length difference to the length of the smaller string
is_twice_as_long <- function(word1, word2) {
boolean <- nchar(word1) >= nchar(word2) * 2
boolean
}
is_twice_as_long("apple","it")
is_twice_as_long("apple","five")
is_twice_as_long("apple","six")
is_twice_as_long("applee","six")
if(word1<word2) {
print(nchar(word2)-nchar(word1))
}
describe_difference <- function(word1, word2) {
if(word1>word2) {
n <- nchar(word1)-nchar(word2)
print("Your first string is longer by " + n + " characters")
}
if(word1<word2) {
n <- nchar(word2)-nchar(word1)
print("Your second string is longer by " + n + " characters")
}
else {
print ("Your strings are the same length!")
}
}
describe_difference(apple, bananas)
describe_difference(apple,bananas)
describe_difference("apple","bananas")
describe_difference <- function(word1, word2) {
if(word1>word2) {
n <- nchar(word1)-nchar(word2)
cat("Your first string is longer by " + n + " characters")
}
if(word1<word2) {
n <- nchar(word2)-nchar(word1)
cat("Your second string is longer by " + n + " characters")
}
else {
cat("Your strings are the same length!")
}
}
describe_difference("apple","bananas")
cat("Your strings are the same length!")
describe_difference("apple","bananas")
describe_difference <- function(word1, word2) {
if(word1>word2) {
n <- nchar(word1)-nchar(word2)
cat("Your first string is longer by ",n," characters")
}
if(word1<word2) {
n <- nchar(word2)-nchar(word1)
cat("Your second string is longer by ",n," characters")
}
else {
print("Your strings are the same length!")
}
}
describe_difference("apple","bananas")
describe_difference <- function(word1, word2) {
if(word1>word2) {
n <- nchar(word1)-nchar(word2)
cat("Your first string is longer by",n,"characters")
}
if(word1<word2) {
n <- nchar(word2)-nchar(word1)
cat("Your second string is longer by",n,"characters")
}
else {
print("Your strings are the same length!")
}
}
describe_difference("apple","bananas")
describe_difference("fuck","shit")
describe_difference("fuck","shit")
describe_difference <- function(word1, word2) {
if(word1 > word2) {
n <- nchar(word1)-nchar(word2)
cat("Your first string is longer by",n,"characters")
}
if(word1 < word2) {
n <- nchar(word2)-nchar(word1)
cat("Your second string is longer by",n,"characters")
}
else {
print("Your strings are the same length!")
}
}
describe_difference("fuck","shit")
if(word1 < word2) {
n <- nchar(word2)-nchar(word1)
cat("Your second string is longer by",n,"characters")
}
describe_difference <- function(word1, word2) {
if(word1 > word2) {
n <- nchar(word1)-nchar(word2)
cat("Your first string is longer by",n,"characters")
}
if(word1 < word2) {
n <- nchar(word2)-nchar(word1)
cat("Your second string is longer by",n,"characters")
}
else {
print("Your strings are the same length!")
}
}
describe_difference("fuck","shit")
describe_difference("shit","shit")
describe_difference("shit","shit")
describe_difference("shit","fuck")
describe_difference("shit","fuck")
describe_difference("shit","fuck")
describe_difference <- function(word1, word2) {
if(word1 > word2) {
n <- nchar(word1)-nchar(word2)
cat("Your first string is longer by",n,"characters")
}
else if(word1 < word2) {
n <- nchar(word2)-nchar(word1)
cat("Your second string is longer by",n,"characters")
}
else {
print("Your strings are the same length!")
}
}
describe_difference("shit","fuck")
describe_difference("dog","cat")
describe_difference <- function(word1, word2) {
if(word1 > word2) {
n <- nchar(word1)-nchar(word2)
cat("Your first string is longer by",n,"characters")
}
else if(word1 < word2) {
n <- nchar(word2)-nchar(word1)
cat("Your second string is longer by",n,"characters")
}
else {
print("Your strings are the same length!")
}
}
describe_difference("dog","cat")
describe_difference <- function(word1, word2) {
if(nchar(word1) > nchar(word2)) {
n <- nchar(word1)-nchar(word2)
cat("Your first string is longer by",n,"characters")
}
else if(nchar(word1) < nchar(word2)) {
n <- nchar(word2)-nchar(word1)
cat("Your second string is longer by",n,"characters")
}
else {
print("Your strings are the same length!")
}
}
describe_difference("dog","cat")
describe_difference("dogs","cat")
describe_difference("dog","cats")
# Call your `describe_difference` function by passing it different length strings
# to confirm that it works. Make sure to check all 3 conditions1
describe_difference("pumpkin", "organic")
describe_difference("fall", "organic")
describe_difference("autumn", "fall")
